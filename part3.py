import cv2
import numpy as np
import matplotlib
import matplotlib.pyplot as plt
import matplotlib.image as mpimg

# p2 [(996, 1792), (1256, 1684), (1468, 1808), (128, 1192), (580, 1316), (632, 688), (1128, 768), (1616, 1348), (2732, 1392), (2704, 1648), (1620, 1604), (1644, 744), (1944, 756), (160, 148), (372, 164), (952, 48), (1380, 392)]
# p1 [(708, 1500), (1004, 1444), (1152, 1512), (128, 1156), (444, 1180), (784, 896), (1224, 940), (1368, 1144), (2464, 1168), (2456, 1440), (1376, 1396), (1736, 928), (2040, 932), (412, 436), (600, 452), (1104, 304), (1488, 588)]

# p1 [(704, 1496), (1000, 1440), (1152, 1520), (260, 1184), (448, 1180), (1380, 1392), (2456, 1448), (2468, 1164), (1364, 1140), (852, 1592), (2036, 928), (1224, 940), (1544, 188), (1108, 300), (1140, 584), (2432, 660), (2524, 656), (2712, 940)]
# p3 [(948, 1584), (1204, 1512), (1456, 1576), (140, 1280), (384, 1256), (1540, 1444), (2556, 1444), (2560, 1188), (1544, 1180), (1224, 1668), (1552, 1040), (724, 1048), (1036, 300), (524, 384), (560, 680), (1936, 784), (2024, 784), (2188, 1040)]

# p2 [(992, 1784), (1248, 1684), (1464, 1804), (1612, 1340), (1620, 1596), (2696, 1644), (2724, 1384), (368, 1336), (592, 1320), (552, 992), (1128, 764), (1432, 812), (1640, 736), (1948, 752), (2360, 508), (2460, 504), (2620, 784)]
# p3 [(948, 1588), (1200, 1516), (1452, 1576), (1536, 1180), (1540, 1448), (2560, 1444), (2564, 1184), (144, 1272), (384, 1256), (388, 880), (724, 1056), (1032, 1120), (1252, 1036), (1548, 1036), (1936, 788), (2028, 776), (2184, 1040)]


h,  w = 1831, 2772
img2 = "undistorted/p2.JPG"
img1 = "undistorted/p3.JPG"
points2 = np.array([(992, 1784), (1248, 1684), (1464, 1804), (1612, 1340), (1620, 1596), (2696, 1644), (2724, 1384), (368, 1336), (592, 1320), (552, 992), (1128, 764), (1432, 812), (1640, 736), (1948, 752), (2360, 508), (2460, 504), (2620, 784)])
points1 = np.array([(948, 1588), (1200, 1516), (1452, 1576), (1536, 1180), (1540, 1448), (2560, 1444), (2564, 1184), (144, 1272), (384, 1256), (388, 880), (724, 1056), (1032, 1120), (1252, 1036), (1548, 1036), (1936, 788), (2028, 776), (2184, 1040)])

mtx,mask = cv2.findFundamentalMat(points2,points1)
print(mtx)
print(mask)

emtx,emask = cv2.findEssentialMat(points2,points1)
print(emtx.tolist())

inliersX = []
inliersY = []

outliersX = []
outliersY = []

for i in range(len(mask)):
	if mask[i] == 1:
		inliersX += [points1[i][0]]
		inliersY += [points1[i][1]]
		# break
	else:
		outliersX += [points1[i][0]]
		outliersY += [points1[i][1]]

img=cv2.imread(img1)
imgplot = plt.imshow(img)
plt.plot(inliersX,inliersY,"o",color = 'y')
plt.plot(outliersX,outliersY,"o",color = 'gray')
for i in range(len(mask)):
	if mask[i] == 1:
		print(np.dot(np.array([points1[i][0],points1[i][1],1]),np.matmul(mtx,np.array([points2[i][0],points2[i][1],1]))))
		a,b,c  = np.matmul(mtx,np.array([points2[i][0],points2[i][1],1]))
		px = []
		py = []
		# print(a,b,c)
		x = 0
		y = -1/b*(a*x+c)
		if y>=0 and y<=h:
			px += [x]
			py += [y]
		x = w
		y = -1/b*(a*x+c)
		if y>=0 and y<=h:
			px += [x]
			py += [y]
		y = 0
		x = -1/a*(b*y+c)
		if x>=0 and x<=w:
			px += [x]
			py += [y]
		y = h
		x = -1/a*(b*y+c)
		if x>=0 and x<=w:
			px += [x]
			py += [y]
		if len(px)==2:
			plt.plot(px,py)
		if len(px)>2:
			print(a,b,c)
		# break
plt.autoscale(enable=True, axis='both', tight=True)
plt.show()